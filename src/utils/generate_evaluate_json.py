import sys, os
import json

main_stats = {
    4: {
        "HP": { 0: 90, 1: 121, 2: 153, 3: 185, 4: 216, 5: 248, 6: 279, 7: 311, 8: 343, 9: 374, 10: 406, 11: 438, 12: 469 },
        "ATK": { 0: 45, 1: 60, 2: 76, 3: 92, 4: 108, 5: 124, 6: 139, 7: 155, 8: 171, 9: 187, 10: 203, 11: 219, 12: 234 },
        "HP_": { 0: 5.5, 1: 7.5, 2: 9.4, 3: 11.3, 4: 13.3, 5: 15.2, 6: 17.1, 7: 19.1, 8: 21.0, 9: 22.9, 10: 24.9, 11: 26.8, 12: 28.8 },
        "ATK_": { 0: 5.5, 1: 7.5, 2: 9.4, 3: 11.3, 4: 13.3, 5: 15.2, 6: 17.1, 7: 19.1, 8: 21.0, 9: 22.9, 10: 24.9, 11: 26.8, 12: 28.8 },
        "DEF_": { 0: 6.9, 1: 9.3, 2: 11.7, 3: 14.2, 4: 16.6, 5: 19.0, 6: 21.4, 7: 23.8, 8: 26.3, 9: 28.7, 10: 31.1, 11: 33.5, 12: 35.9 },
        "CRIT Rate_": { 0: 4.1, 1: 5.6, 2: 7.1, 3: 8.5, 4: 10.0, 5: 11.4, 6: 12.9, 7: 14.3, 8: 15.8, 9: 17.2, 10: 18.7, 11: 20.1, 12: 21.6 },
        "CRIT DMG_": { 0: 8.3, 1: 11.2, 2: 14.1, 3: 17.0, 4: 19.9, 5: 22.8, 6: 25.7, 7: 28.6, 8: 31.5, 9: 34.4, 10: 37.3, 11: 40.2, 12: 43.1 },
        "Outgoing Healing Boost_": { 0: 4.4, 1: 6.0, 2: 7.5, 3: 9.1, 4: 10.6, 5: 12.2, 6: 13.7, 7: 15.3, 8: 16.8, 9: 18.4, 10: 19.9, 11: 21.5, 12: 23.0 },
        "Effect Hit Rate_": { 0: 5.5, 1: 7.5, 2: 9.4, 3: 11.3, 4: 13.3, 5: 15.2, 6: 17.1, 7: 19.1, 8: 21.0, 9: 22.9, 10: 24.9, 11: 26.8, 12: 28.8 },
        "SPD": { 0: 3, 1: 4, 2: 5, 3: 7, 4: 8, 5: 9, 6: 10, 7: 11, 8: 12, 9: 13, 10: 14, 11: 15, 12: 16 },
        "Physical DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Fire DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Ice DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Lightning DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Wind DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Quantum DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Imaginary DMG Boost_": { 0: 5.0, 1: 6.7, 2: 8.5, 3: 10.2, 4: 11.9, 5: 13.7, 6: 15.4, 7: 17.2, 8: 18.9, 9: 20.7, 10: 22.4, 11: 24.1, 12: 25.9 },
        "Break Effect_": { 0: 8.3, 1: 11.2, 2: 14.1, 3: 17.0, 4: 19.9, 5: 22.8, 6: 25.7, 7: 28.6, 8: 31.5, 9: 34.4, 10: 37.3, 11: 40.2, 12: 43.1 },
        "Energy Regeneration_": { 0: 2.5, 1: 3.4, 2: 4.2, 3: 5.1, 4: 6.0, 5: 6.8, 6: 7.7, 7: 8.6, 8: 9.5, 9: 10.3, 10: 11.2, 11: 12.1, 12: 12.9 }
    },
    5: {
        "HP": { 0: 112, 1: 152, 2: 191, 3: 231, 4: 270, 5: 310, 6: 349, 7: 389, 8: 429, 9: 468, 10: 508, 11: 547, 12: 587, 13: 626, 14: 666, 15: 705 },
        "ATK": { 0: 56, 1: 76, 2: 95, 3: 115, 4: 135, 5: 155, 6: 174, 7: 194, 8: 214, 9: 234, 10: 254, 11: 273, 12: 293, 13: 313, 14: 333, 15: 352 },
        "HP_": { 0: 6.9, 1: 9.3, 2: 11.8, 3: 14.2, 4: 16.6, 5: 19.0, 6: 21.4, 7: 23.8, 8: 26.3, 9: 28.7, 10: 31.1, 11: 33.5, 12: 35.9, 13: 38.4, 14: 40.8, 15: 43.2 },
        "ATK_": { 0: 6.9, 1: 9.3, 2: 11.8, 3: 14.2, 4: 16.6, 5: 19.0, 6: 21.4, 7: 23.8, 8: 26.3, 9: 28.7, 10: 31.1, 11: 33.5, 12: 35.9, 13: 38.4, 14: 40.8, 15: 43.2 },
        "DEF_": { 0: 8.6, 1: 11.7, 2: 14.7, 3: 17.7, 4: 20.7, 5: 23.8, 6: 26.8, 7: 29.8, 8: 32.8, 9: 35.9, 10: 38.9, 11: 41.9, 12: 44.9, 13: 48.0, 14: 51.0, 15: 54.0 },
        "CRIT Rate_": { 0: 5.2, 1: 7.0, 2: 8.8, 3: 10.6, 4: 12.4, 5: 14.3, 6: 16.1, 7: 17.9, 8: 19.7, 9: 21.5, 10: 23.3, 11: 25.1, 12: 27.0, 13: 28.8, 14: 30.6, 15: 32.4 },
        "CRIT DMG_": { 0: 10.4, 1: 14.0, 2: 17.6, 3: 21.3, 4: 24.9, 5: 28.5, 6: 32.1, 7: 35.8, 8: 39.4, 9: 43.0, 10: 46.7, 11: 50.3, 12: 53.9, 13: 57.5, 14: 61.2, 15: 64.8 },
        "Outgoing Healing Boost_": { 0: 5.5, 1: 7.5, 2: 9.4, 3: 11.3, 4: 13.3, 5: 15.2, 6: 17.1, 7: 19.1, 8: 21.0, 9: 22.9, 10: 24.9, 11: 26.8, 12: 28.7, 13: 30.7, 14: 32.6, 15: 34.6 },
        "Effect Hit Rate_": { 0: 6.9, 1: 9.3, 2: 11.8, 3: 14.2, 4: 16.6, 5: 19.0, 6: 21.4, 7: 23.8, 8: 26.3, 9: 28.7, 10: 31.1, 11: 33.5, 12: 35.9, 13: 38.4, 14: 40.8, 15: 43.2 },
        "SPD": { 0: 4, 1: 5, 2: 7, 3: 8, 4: 10, 5: 11, 6: 12, 7: 14, 8: 15, 9: 17, 10: 18, 11: 19, 12: 21, 13: 22, 14: 24, 15: 25 },
        "Physical DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Fire DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Ice DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Lightning DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Wind DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Quantum DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Imaginary DMG Boost_": { 0: 6.2, 1: 8.4, 2: 10.6, 3: 12.8, 4: 14.9, 5: 17.1, 6: 19.3, 7: 21.5, 8: 23.6, 9: 25.8, 10: 28.0, 11: 30.2, 12: 32.3, 13: 34.5, 14: 36.7, 15: 38.8 },
        "Break Effect_": { 0: 10.4, 1: 14.0, 2: 17.6, 3: 21.3, 4: 24.9, 5: 28.5, 6: 32.1, 7: 35.8, 8: 39.4, 9: 43.0, 10: 46.6, 11: 50.3, 12: 53.9, 13: 57.5, 14: 61.2, 15: 64.8 },
        "Energy Regeneration_": { 0: 3.1, 1: 4.2, 2: 5.3, 3: 6.4, 4: 7.5, 5: 8.6, 6: 9.6, 7: 10.7, 8: 11.8, 9: 12.9, 10: 14.0, 11: 15.1, 12: 16.2, 13: 17.3, 14: 18.4, 15: 19.4 }
    }
}

starting_sub_stats = {
    4: {
        "HP": { 1: 27, 2: 30, 3: 33 },
        "ATK": { 1: 13, 2: 15, 3: 16 },
        "DEF": { 1: 13, 2: 15, 3: 16 },
        "HP_": { 1: 2.7, 2: 3.1, 3: 3.4 },
        "ATK_": { 1: 2.7, 2: 3.1, 3: 3.4 },
        "DEF_": { 1: 3.4, 2: 3.8, 3: 4.3 },
        "SPD": { 1: 1, 2: 1, 3: 2 },
        "CRIT Rate_": { 1: 2, 2: 2.3, 3: 2.5 },
        "CRIT DMG_": { 1: 4.1, 2: 4.6, 3: 5.1 },
        "Effect Hit Rate_": { 1: 2.7, 2: 3.1, 3: 3.4 },
        "Effect RES_": { 1: 2.7, 2: 3.1, 3: 3.4 },
        "Break Effect_": { 1: 4.1, 2: 4.6, 3: 5.1 }
    },
    5: {
        "HP": { 1: 33, 2: 38, 3: 42 },
        "ATK": { 1: 16, 2: 19, 3: 21 },
        "DEF": { 1: 16, 2: 19, 3: 21 },
        "HP_": { 1: 3.4, 2: 3.8, 3: 4.3 },
        "ATK_": { 1: 3.4, 2: 3.8, 3: 4.3 },
        "DEF_": { 1: 4.3, 2: 4.8, 3: 5.4 },
        "SPD": { 1: 2, 2: 2, 3: 3 },
        "CRIT Rate_": { 1: 2.5, 2: 2.9, 3: 3.2 },
        "CRIT DMG_": { 1: 5.1, 2: 5.8, 3: 6.4 },
        "Effect Hit Rate_": { 1: 3.4, 2: 3.8, 3: 4.3 },
        "Effect RES_": { 1: 3.4, 2: 3.8, 3: 4.3 },
        "Break Effect_": { 1: 5.1, 2: 5.8, 3: 6.4 }
    }
}

sub_stats_increment = {
    4: {
        "HP": { 1: 27, 2: 30, 3: 34 },
        "ATK": { 1: 14, 2: 15, 3: 17 },
        "DEF": { 1: 14, 2: 15, 3: 17 },
        "HP_": { 1: 2.8, 2: 3.1, 3: 3.5 },
        "ATK_": { 1: 2.8, 2: 3.1, 3: 3.5 },
        "DEF_": { 1: 3.5, 2: 3.9, 3: 4.3 },
        "SPD": { 1: 1.6, 2: 1.8, 3: 2.0 },
        "CRIT Rate_": { 1: 2.1, 2: 2.3, 3: 2.6 },
        "CRIT DMG_": { 1: 4.2, 2: 4.7, 3: 5.2 },
        "Effect Hit Rate_": { 1: 2.8, 2: 3.1, 3: 3.5 },
        "Effect RES_": { 1: 2.8, 2: 3.1, 3: 3.5 },
        "Break Effect_": { 1: 4.2, 2: 4.7, 3: 5.2 }
    },
    5: {
        "HP": { 1: 34, 2: 38, 3: 42 },
        "ATK": { 1: 17, 2: 19, 3: 21 },
        "DEF": { 1: 17, 2: 19, 3: 21 },
        "HP_": { 1: 3.5, 2: 3.9, 3: 4.3 },
        "ATK_": { 1: 3.5, 2: 3.9, 3: 4.3 },
        "DEF_": { 1: 4.3, 2: 4.9, 3: 5.4 },
        "SPD": { 1: 2, 2: 2.3, 3: 2.6 },
        "CRIT Rate_": { 1: 2.6, 2: 2.9, 3: 3.2 },
        "CRIT DMG_": { 1: 5.2, 2: 5.8, 3: 6.5 },
        "Effect Hit Rate_": { 1: 3.5, 2: 3.9, 3: 4.3 },
        "Effect RES_": { 1: 3.5, 2: 3.9, 3: 4.3 },
        "Break Effect_": { 1: 5.2, 2: 5.8, 3: 6.5 }
    }
}

def resource_path(relative_path):
    base_path = getattr(sys, "_MEIPASS", os.path.dirname(os.path.abspath(__file__)))
    return os.path.join(base_path, relative_path)

def generate_json():
    merged_json = {}
    merged_json["main"] = main_stats
    substats_map = {}
    substats_map[4] = {}
    for key, val_map in starting_sub_stats[4].items():
        substats_map[4][key] = {}
        generate_sub_stats([1], val_map[1], key, 4, substats_map[4][key], 0)
        generate_sub_stats([2], val_map[2], key, 4, substats_map[4][key], 0)
        generate_sub_stats([3], val_map[3], key, 4, substats_map[4][key], 0)
        substats_map[4][key] = dict(sorted(substats_map[4][key].items()))
    substats_map[5] = {}
    for key, val_map in starting_sub_stats[5].items():
        substats_map[5][key] = {}
        generate_sub_stats([1], val_map[1], key, 5, substats_map[5][key], 0)
        generate_sub_stats([2], val_map[2], key, 5, substats_map[5][key], 0)
        generate_sub_stats([3], val_map[3], key, 5, substats_map[5][key], 0)
        substats_map[5][key] = dict(sorted(substats_map[5][key].items()))
    merged_json["sub"] = substats_map
    json_object = json.dumps(merged_json, indent=2)
    with open(resource_path("evaluate_stats.json"), "w") as outfile:
        print(json_object)
        outfile.write(json_object)

def generate_sub_stats(current_list, current_value, key, rarity, map, depth):
    if rarity == 4:
        if depth >= 5:
            return
    else:
        if depth >= 6:
            return

    depth += 1
    rounded_value = round(float(current_value), 1)
    # if rounded_value in map:
    #     if len(current_list) not in [len(x) for x in map[rounded_value]]:
    #         map[rounded_value].append(current_list)
    # else:
    #     map[rounded_value] = [current_list]
    effective_stat_map = { 1: 0.8, 2: 0.9, 3: 1.0 }
    effective_stat_value = round(sum([effective_stat_map[x] for x in current_list]), 1)
    if rounded_value in map:
        if map[rounded_value] < effective_stat_value:
            map[rounded_value] = effective_stat_value
    else:
        map[rounded_value] = effective_stat_value

    copy_list_1 = current_list.copy()
    copy_list_1.append(1)
    generate_sub_stats(copy_list_1, current_value + sub_stats_increment[rarity][key][1], key, rarity, map, int(depth))
    copy_list_2 = current_list.copy()
    copy_list_2.append(2)
    generate_sub_stats(copy_list_2, current_value + sub_stats_increment[rarity][key][2], key, rarity, map, int(depth))
    copy_list_3 = current_list.copy()
    copy_list_3.append(3)
    generate_sub_stats(copy_list_3, current_value + sub_stats_increment[rarity][key][3], key, rarity, map, int(depth))
    

if __name__ == "__main__":
    generate_json()
    